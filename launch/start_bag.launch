<?xml version="1.0"?>
<launch>
    
    <arg name="bag_file"                default="2023-05-25-14-21-10_sensors_Raekoda.bag" doc="bag file to play" />
    <arg name="localizer"               default="novatel"       doc="novatel, carla"/>
    <arg name="detector"                default="lidar_cluster" doc="lidar_cluster, sim, carla"/>
    <arg name="use_lidar_center"        default="true"          doc="use velodyne lidar"/>
    <arg name="use_lidar_front"         default="false"         doc="use ouster lidar"/>
    <arg name="tfl_detector"            default="camera"        doc="camera, mqtt, mqtt_camera_fusion" />
    <arg name="global_planner"          default="lanelet2"      doc="waypoints, lanelet2"/>
    <arg name="local_planner"           default="velocity"      doc="velocity"/>
    <arg name="follower"                default="pure_pursuit"  doc="pure_pursuit, stanley"/>
    <arg name="use_path_smoothing"      default="true" />
    <arg name="tracker"                 default="ema"           doc="none, ema"/>
    <arg name="predictor"               default="none"          doc="none, naive"/>
    <arg name="lanelet2_map_name"       default="tartu_demo.osm" />
    <arg name="use_tf"                  default="true"          doc="replaces tf-s in bag with the current ones"/>
    <arg name="use_localization"        default="$(arg use_tf)" doc="replace localization topics"/>
    <arg name="use_detection"           default="true"          doc="replace object detection topics"/>
    <arg name="use_planning"            default="true"          doc="replace planning topics"/>
    <arg name="use_control"             default="true"          doc="replace control topics"/>

    <!-- Use simulation time from bag -->
    <param name="/use_sim_time" value="true" />

    <!-- Play back bag -->
    <node pkg="rosbag" type="play" name="player" required="true" args="$(find autoware_mini)/data/bags/$(arg bag_file) --clock --loop">
        <!-- Rename saved topics that are replaced by current ones -->
        <remap from="/tf" to="/bag/tf" if="$(arg use_tf)"/>
        <remap from="/tf_static" to="/bag/tf_static" if="$(arg use_tf)"/>
        <remap from="/localization/current_pose" to="/bag/localization/current_pose" if="$(arg use_localization)"/>
        <remap from="/localization/current_velocity" to="/bag/localization/current_velocity" if="$(arg use_localization)"/>
        <remap from="/localization/odometry" to="/bag/localization/odometry" if="$(arg use_localization)"/>
        <remap from="/detection/lidar/points_ground" to="/bag/detection/lidar/points_ground" if="$(arg use_detection)"/>
        <remap from="/detection/lidar/points_no_ground" to="/bag/detection/lidar/points_no_ground" if="$(arg use_detection)"/>
        <remap from="/detection/lidar/points_clustered" to="/bag/detection/lidar/points_clustered" if="$(arg use_detection)"/>
        <remap from="/detection/lidar/detected_objects" to="/bag/detection/lidar/detected_objects" if="$(arg use_detection)"/>
        <remap from="/detection/lidar/detected_objects_markers" to="/bag/detection/lidar/detected_objects_markers" if="$(arg use_detection)"/>
        <remap from="/detection/radar/detected_objects" to="/bag/detection/radar/detected_objects" if="$(arg use_detection)"/>
        <remap from="/detection/radar/detected_objects_markers" to="/bag/detection/radar/detected_objects_markers" if="$(arg use_detection)"/>
        <remap from="/detection/detected_objects" to="/bag/detection/detected_objects" if="$(arg use_detection)"/>
        <remap from="/detection/detected_objects_markers" to="/bag/detection/detected_objects_markers" if="$(arg use_detection)"/>
        <remap from="/planning/lanelet2_map_markers" to="/bag/planning/lanelet2_map_markers" if="$(arg use_planning)"/>
        <remap from="/planning/global_path" to="/bag/planning/global_path" if="$(arg use_planning)"/>
        <remap from="/planning/global_path_markers" to="/bag/planning/global_path_markers" if="$(arg use_planning)"/>
        <remap from="/planning/smoothed_path" to="/bag/planning/smoothed_path" if="$(arg use_planning)"/>
        <remap from="/planning/smoothed_path_markers" to="/bag/planning/smoothed_path_markers" if="$(arg use_planning)"/>
        <remap from="/planning/local_path" to="/bag/planning/local_path" if="$(arg use_planning)"/>
        <remap from="/planning/local_path_markers" to="/bag/planning/local_path_markers" if="$(arg use_planning)"/>
        <remap from="/planning/stop_line_markers" to="/bag/planning/stop_line_markers" if="$(arg use_planning)"/>
        <remap from="/detection/traffic_light_status" to="/bag/detection/traffic_light_status" if="$(arg use_detection)"/>
        <remap from="/detection/camera_fl/traffic_light_status" to="/bag/detection/camera_fl/traffic_light_status" if="$(arg use_detection)"/>
        <remap from="/detection/camera_fl/traffic_light_roi" to="/bag/detection/camera_fl/traffic_light_roi" if="$(arg use_detection)"/>
        <remap from="/detection/camera_fr/traffic_light_status" to="/bag/detection/camera_fr/traffic_light_status" if="$(arg use_detection)"/>
        <remap from="/detection/camera_fr/traffic_light_roi" to="/bag/detection/camera_fr/traffic_light_roi" if="$(arg use_detection)"/>
        <remap from="/detection/camera/traffic_light_status" to="/bag/detection/camera/traffic_light_status" if="$(arg use_detection)"/>
        <remap from="/detection/mqtt/traffic_light_status" to="/bag/detection/mqtt/traffic_light_status" if="$(arg use_detection)"/>
        <remap from="/control/vehicle_cmd" to="/bag/control/vehicle_cmd" if="$(arg use_control)"/>
        <remap from="/dashboard/current_speed" to="/bag/dashboard/current_speed" />
        <remap from="/dashboard/target_speed" to="/bag/dashboard/target_speed" />
        <remap from="/dashboard/closest_object_distance" to="/bag/dashboard/closest_object_distance" />
        <remap from="/dashboard/closest_object_speed" to="closest_object_speed" />
        <remap from="/dashboard/acceleration" to="/bag/dashboard/acceleration" />
        <remap from="/dashboard/acceleration_limit" to="/bag/dashboard/acceleration_limit" />
        <remap from="/dashboard/deceleration_limit" to="/bag/dashboard/deceleration_limit" />
        <!-- For compatibility with older bags and Vella bags -->
        <remap from="/points_raw_center" to="/lidar_center/points_raw"/>
        <remap from="/points_raw_front" to="/lidar_front/points_raw"/>
        <remap from="/lidar_0/vlp32/pcl2" to="/lidar_center/points_raw"/>
    </node>

    <!-- Localization -->
    <include if="$(arg use_localization)" file="$(find autoware_mini)/launch/localization.launch">
        <arg name="localizer"       value="$(arg localizer)" />
    </include>

    <!-- Detection -->
    <include if="$(arg use_detection)" file="$(find autoware_mini)/launch/detection.launch">
        <arg name="detector"            value="$(arg detector)" />
        <arg name="use_lidar_center"    value="$(arg use_lidar_center)" />
        <arg name="use_lidar_front"     value="$(arg use_lidar_front)" />
        <arg name="tfl_detector"        value="$(arg tfl_detector)" />
        <arg name="lanelet2_map_name"   value="$(arg lanelet2_map_name)" />
        <arg name="tracker"             value="$(arg tracker)" />
        <arg name="predictor"           value="$(arg predictor)" />
    </include>

    <!-- Planning -->
    <include if="$(arg use_planning)" file="$(find autoware_mini)/launch/planning.launch">
        <arg name="global_planner"      value="$(arg global_planner)" />
        <arg name="local_planner"       value="$(arg local_planner)" />
        <arg name="use_path_smoothing"  value="$(arg use_path_smoothing)" />
        <arg name="lanelet2_map_name"   value="$(arg lanelet2_map_name)" />
    </include>

    <!-- Control -->
    <include if="$(arg use_control)" file="$(find autoware_mini)/launch/control.launch">
        <arg name="follower"        value="$(arg follower)" />
    </include>

    <!-- Bag platform -->
    <include file="$(find autoware_mini)/launch/platform/bag.launch">
        <arg name="use_tf"          value="$(arg use_tf)" />
    </include>

    <!-- Rviz -->
    <include file="$(find autoware_mini)/launch/dashboard.launch" />
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find autoware_mini)/rviz/autoware_mini.rviz" required="true" />

</launch>